// <auto-generated />
using System;
using DD.AccessService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DD.AccessService.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240523075640_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.ApiKeyEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("LastUsedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserEntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.HasIndex("UserId");

                    b.HasIndex("Value");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.ClaimEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApiKeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "ADA96D6D-7214-40BE-BC76-A4741A879D8E",
                            Name = "John",
                            Surname = "Doe"
                        });
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.ApiKeyEntity", b =>
                {
                    b.HasOne("DD.AccessService.Infrastructure.Persistence.Models.UserEntity", null)
                        .WithMany("ApiKeys")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.ClaimEntity", b =>
                {
                    b.HasOne("DD.AccessService.Infrastructure.Persistence.Models.ApiKeyEntity", "ApiKey")
                        .WithMany("Claims")
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiKey");
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.ApiKeyEntity", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("DD.AccessService.Infrastructure.Persistence.Models.UserEntity", b =>
                {
                    b.Navigation("ApiKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
